library(swirl)swirl()
5+7
x <- 5 + 7
x
y
x-3
<-x-3
x-3
y<-x-3
y
c(1.1,9,3.14)
(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(555 z)
c(z, 555)
c(z, 555, z)
z * 2 + 100
my_sqrt
my_sqrt(z-1)
z-1
sqrt(z-1)
info()
sqrt(z-1)
sqrt(my_sqrt-1)
c(my_sqrt)
skip()
my_sqrt
my_div
skip()
my_div
C(1,2,3,4)+c(0,10)
c(1,2,3,4)+ c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
cyrus2 &lt;- Data2#
cyrus3 &lt;- cyrus2[order(cyrus2$age),]#
cMass &lt;-which(cyrus3$event == &#39;trait_mass&#39;)#
avgcMass &lt;-mean(cyrus3$value[cMass])#
avgcMass &lt;- tapply(cyrus3$value[cMass], cyrus3$age[cMass], mean)#
varcMass &lt;- tapply(cyrus3$value[cMass], cyrus3$age[cMass], var)#
totalcMass &lt;- tapply(cyrus3$value[cMass], cyrus3$age[cMass],sum)#
numcMass &lt;- tapply(cyrus3$value[cMass], cyrus3$age[cMass], length)#
cor(cyrus3$value[cMass], cyrus3$age[cMass])#
cor.test(cyrus3$value[cMass], cyrus3$age[cMass])#
cyrusCor &lt;- cor.test(cyrus3$value[cMass], cyrus3$age[cMass])#
summary(cyrusCor)#
cyrusANOVA &lt;- aov(cyrus3$value[cMass] ~ cyrus3$age[cMass])#
boxplot(cyrus3$value[cMass] ~ cyrus3$age[cMass], xlab= &quot;age(days)&quot;, ylab= &quot;mass(g)&quot;)#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalcMass)), totalcMass, type=&#39;b&#39;, pch=16, xlab=&quot;age in days&quot;,#
ylab=&quot;mass in grams&quot;)#
abline(h=mean(totalcMass), lty=2, col=&#39;purple&#39;)#
pdf(&quot;r02b-totalMassByDayCyrus.pdf&quot;, height=4, width=4)#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalcMass)), totalcMass, type=&quot;b&quot;, pch=16, xlab=&quot;age in days&quot;,#
ylab=&quot;mass in grams&quot;)#
title(&quot;Cyrus Age vs Mass&quot;, xlab=&quot;age in days&quot;, ylab=&quot;mass in grams&quot;)#
abline(h=mean(totalcMass), lty=2, col=&#39;purple&#39;)
boxplot( beren3$value[Mass] ~ beren3$age[Mass], xlab= &quot;age(days)&quot;, ylab= &quot;mass(kg)&quot;)#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalMass)), totalMass, type=&quot;b&quot;, pch=16, xlab=&quot;age in days&quot;,#
ylab=&quot;mass in kg&quot;, ylim=c(0,20), col=&#39;green&#39;)#
points(cyrus3$age[cMass], cyrus3$value[cMass]/1000, pch=16, col=&#39;purple&#39;)#
title(&quot;Beren and Cyrus Age vs Mass&quot;)#
legend(1000, 6, legend=c(&quot;Beren&quot;, &quot;Cyrus&quot;), col=c(&quot;green&quot;,&quot;purple&quot;), lty=2:2, cex=0.8,#
title=&quot;Children&quot;, text.font=4)#
dev.off()
source("http://jonsmitchell.com/code/fxn05.R")
Pop1 <-simPop (Popsize = 50,nGenerations = 100,initial_p = 0.5,h=1,s=0)
size=50, nGenerations=100, initial_p=0.5,h=1,s=0)
Popsize=50, nGenerations=100, initial_p=0.5,h=1,s=0)
plot(1:nrow(Pop1), Pop1[,1], ylim = c(0,1), type = "1", xlab="generation", ylab = "allele freq.", lwd=2)
plot(1:nrow(Pop1), Pop[,1], ylim=c(0,1),type="1", xlab="generation",ylab="allele freq.", lwd=2)
lines(1: nrow(Pop1, Pop1[,2],lwd=2, col='red'))
plot(1:nrow(Pop1), Pop1[,1], ylim = c(0,1), type = "l", xlab="generation", ylab = "allele freq.", lwd=2)
lines(1: nrow(Pop1), Pop1[,2],lwd=2, col='red'))
lines(1: nrow(Pop1), Pop1[,2],lwd=2, col='red')
source("http://jonsmitchell.com/code/fxn05.R")#
# run a simple simulation#
simPop (Popsize = 50,nGenerations = 100, initial_p = 0.5, h=1,s=0)#
Pop1 <-simPop(Popsize = 50,nGenerations = 100, initial_p = 0.5, h=1,s=0)#
plot(1:nrow(Pop1), Pop1[,1], ylim = c(0,1), type = "l", xlab="generation", ylab = "allele freq.", lwd=2)#
lines(1: nrow(Pop1), Pop1[,2],lwd=2, col='red')#
legend("topleft", legend = c("a","b"), col=c("black","red"), lwd = 2,bty = "n")#
plotFit(nruns=10,n=50,ngens = 100,init_p = 0.5,h=1,s=0)#
Expectation <-c(10,10,10,10)#
Observed<-c(15,5,5)
Chisq <-sum(Expectation-Observed)^2)/Expectation)
Chisq <-sum(((Expectation-Observed)^2)/Expectation)
warning()
skip()
Chisq <-sum((Expectation-Observed)^2)/Expectation)
Chisq <-sum(((Expectation-Observed)^2)/Expectation)
Chisq <-sum(((Observed-Expectation)^2)/Expectation)
Chisq <-sum(((Observed-Expectation)^2)/)Expectation)
Chisq <-sum(((Expectation-Observed)^2)/)Expectation)
Chisq<- sum( ( (Expectation-Observed)^2)/Expectation)
Chisq <- sum( ( ( Expectation-Observed )^2)/Expectation )
Chisq <- sum( ( ( Expectation-Observed )^2) /Expectation )
Chisq <- sum( ( ( Expectation - Observed ) ^2) / Expectation )
Pop1 <- simPop(Popsize = 50, nGeneration = 100, initial_p = 0.5, h = 1, s = 0)#
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l" , xlab="generation", ylab="allele freq." , lwd=2)#
lines(1:nrow(Pop1) , Pop1[,2], lwd=2, col='red')#
legend("topleft", legend = c("a", "b"), col = c("black", "red"), lwd = 2, bty="n")#
plotFit( nruns = 10, n =50, ngens = 100, init_p = 0.5, h =1, s=0)#
Expectation <- c(10, 10, 10, 10)#
Observed <- c(15, 15, 5, 5)#
Chisq <- sum( ( ( Expectation - Observed ) ^2) / Expectation ) #
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~. (Chisq)), legend.text=c("expected", "observed"))
Observed<-c(15,15,5,5)
Chisq <- sum( ( ( Expectation - Observed ) ^2) / Expectation )
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~. (Chisq)), legend.text=c("expected", "observed"))
library(adegenet)
coalescent.plot()
library(adegenet)
library(poppr)
library(dplyr)
learnPopGen
library(adegenet)
setwd("C://Users//faiththarp//Desktop//Evolution//Tasks//Task_05")
setwd("C://Users//faiththarp//Desktop//Evolution//Tasks//Task_04")
setwd("C://Users//faiththarp//Desktop//Evolution//Tasks//Task.05")
setwd("C://Users//faiththarp//Desktop//Tasks//Task_05")
source("http://jonsmitchell.com/code/reformatData07.R")#
source("http://jonsmitchell.com/code/simFxn.R")#
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(0, 1))#
s <- apply(overallFreq , 2, function(x) lines(overallFreq[,1], x, col=rgb(0,0,0,0,0.1)))#
rescaleFreq <-apply(overallFreq[,3:ncol(overallFreq)], 2, function(x) x-x[1])#
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(-0.25, 0.25))
setwd('~/Desktop/Evolution/Tasks/Task_06')
source("http://jonsmitchell.com/code/reformatData07.R")#
source("http://jonsmitchell.com/code/simFxn.R")#
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(0, 1))#
s <- apply(overallFreq , 2, function(x) lines(overallFreq[,1], x, col=rgb(0,0,0,0,0.1)))#
rescaleFreq <-apply(overallFreq[,3:ncol(overallFreq)], 2, function(x) x-x[1])#
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(-0.25, 0.25))#
s <- apply(rescaleFreq, 2, function(x) lines(overallFreq[,1], x, col=rgb(0,0,0,0.01)))#
dYear <- c()#
dAlleles <-c()#
for (i in 3:ncol(overallFreq)) {#
  dYear <-c (dYear, overallFreq[,1])  #
  Vec <- overallFreq[,i]#
  Init <- overallFreq[1,i]#
  dAlleles <- c(dAlleles, Vec - Init)  #
}#
smoothScatter(dYear, dAlleles, colramp = Pal, nbin=100) #
smoothScatter(dYear, dAlleles, colramp = Pal, nbin=100, xlab="year", #
              ylab="change in allele freq. since 1998")#
addFit(nruns = 50, n = 100, ngens = 18,startT = 1997, simCol = "gray40", rescale = TRUE)              #
plot(alleleFreqs$d_freq, alleleFreqs$d_imm, xlim=c(-0.15, 0.15), xlab="overall freq. change", ylab="freq. change in subset")#
points(alleleFreqs$d_freq, alleleFreqs$d_birth, col='blue')#
points(alleleFreqs$d_freq, alleleFreqs$d_surv, col='red')
