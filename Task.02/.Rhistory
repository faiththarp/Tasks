step1
install.packages("swirl")
library("swirl")
swirl()
5 + 7
x <- 5 + 7
x
y
y<- x-3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z * 2 + 100
sqrt(z-1)
my_sqrt
skip()
my_sqrt
my_div
skip()
my_div
c(1,2,3,4) + c(0, 10)
c(1,2,3,4) + c(0, 10, 100)
z * 2 + 1000
my_div
library(swril)
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
x-3
y <- x - 3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?
?c
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt<- sqrt(z-1)
my_sqrt
my_div<- z/my_sqrt
my_div
c(1,2,3,4) + c(0, 10)
c(1,2,3,4) + c(0, 10, 100)
z * 2 +1000
my_div
function>
source("/var/folders/bq/c2jdqqfd3bd55xrswsx37xtw0000gn/T//Rtmpe3E4y4/my_mean.R")
source("/private/var/folders/bq/c2jdqqfd3bd55xrswsx37xtw0000gn/T/Rtmpe3E4y4/evaluate-correct.R")
source("/var/folders/bq/c2jdqqfd3bd55xrswsx37xtw0000gn/T//Rtmpe3E4y4/my_mean-correct.R")
source("/var/folders/bq/c2jdqqfd3bd55xrswsx37xtw0000gn/T//Rtmpe3E4y4/remainder.R")
source("/var/folders/bq/c2jdqqfd3bd55xrswsx37xtw0000gn/T//Rtmpe3E4y4/evaluate.R")
source("/private/var/folders/bq/c2jdqqfd3bd55xrswsx37xtw0000gn/T/Rtmpe3E4y4/telegram.R")
source("/var/folders/bq/c2jdqqfd3bd55xrswsx37xtw0000gn/T//Rtmpe3E4y4/mad_libs.R")
source("/var/folders/bq/c2jdqqfd3bd55xrswsx37xtw0000gn/T//Rtmpe3E4y4/bin_op.R")
setwd('setwd('~/Desktop/Evolution/Task.02')')
setwd('~/Desktop/Evolution/Tasks/Task.02')
setwd('~/Desktop/Evolution/Tasks/Task.02')
setwd('User/mitchell/Desktop/Evolution/Tasks/Tasks_02')
setwd('/User/mitchell/Desktop/Evolution/Tasks/Tasks_02')
Datal <- read . csv ('http: //jonsmitchell.com/data/beren.csv', stringsAsFactors=F)
Datal <read . csv ('http: //jonsmitchell.com/data/beren.csv', stringsAsFactors=F)
Datal <-read .csv ('http: //jonsmitchell.com/data/beren.csv', stringsAsFactors=F)
setwd('~/Desktop/Evolution/Tasks/Task.02')
Datal<- read.csv('http://jonsmitchell.com/data/beren.csv',stringsAsFactors=F)
Data2<- read.csv ('http://jonsmitchell.com/data/cyrus.csv', stringsAsFactors=F)
write.csv(Datal, 'rawdata.csv', quote=F)
'Data1'
Data1
write.csv(Datal, 'rawdata.csv', quote=F
Data1
write.csv(Datal, 'rawdata.csv', quote=F)
Data1
head(Data1)
write.csv(Data1, 'rawdata.csv', quote=F)
Data2<- read.csv ('http://jonsmitchell.com/data/cyrus.csv', stringsAsFactors=F)
Data1<- read.csv('http://jonsmitchell.com/data/beren.csv',stringsAsFactors=F)
write.csv(Data1, 'rawdata.csv', quote=F)
Data1
head(Data1)
GlargleBrgle<- Data1
head(GlargleBrgle)
length(Data1)
nrow(Data1)
ncol(Data1)
colnames(Data1)
head(Data1)
Data1[1,]
Data2[2,]
Data1[1:3,]
Data1[1:3, 4]
Data1[1:5, 1:3]
Feeds <- which(Data1 [,9]=='bottle')
berenMilk <- Data1[Feeds ,]
head(berenMilk)
Feeds <-which(Data1 [,'event']== 'bottle')
Feeds <-which(Data1$event == 'bottle')
dayID <- apply(Data1, 1, function(x) paste (x[1:3], collapse='-'))
dateID <- sapply (dayID, as.Date, format = "%Y-%m-%d", origin ="2019-04-18")
Data1$age <-dateID-dateID[which (Data$event == 'birth')]
Data1$age <-dateID-dateID[which (Data1$event == 'birth')]
beren2 <- Data1
beren3 <- beren2 [order (beren2$age),]
write.csv(beren3, 'beren_new.csv', quote = F, row.names = FALSE)
Feeds <- which(beren3$event == "bottle")
avgMilk <- mean(beren3$value [Feeds])
avgFeed <- tapply (beren3$value [Feeds], beren3$age [Feeds], mean)
varFeed <- tapply (beren3$value [Feeds], beren3$age [Feeds], var)
totalFeed <- tapply (beren3$value [Feeds], beren3$age [Feeds], sum)
numFeeds <- tapply (beren3$value [Feeds], beren3$age [Feeds], length)
cor(beren3$value [Feeds], beren3$age[Feeds])
cor.test (beren3$value [Feeds], beren3$age[Feeds])
berenCor<- cor.test (beren3$value [Feeds], beren3$age [Feeds])
summary(berenCor)
berenANOVA <- aov(beren3$value [Feeds]~ beren3$caregiver [Feeds])
boxplot( beren3$value [Feeds]~ beren3$caregiver[Feeds], xlab= "who gave the bottle", ylab = "amount of milk consumed (oz)")
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
pdf("r02b-totalMilkByDay.pdf", height=4, width=4)
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
dev.off()
source("http://jonmitchell.com/code/plotFxn02b.R")
source("http://jonsmitchell.com/code/plotFxn02b.R")
pdf("r02b-cumulativeMilkByTime.pdf")
Data2 <- read.csv('http://jonsmitchell.com/data/beren.csv',stringsAsFactors=F)
Data2 <- read.csv('http://jonsmitchell.com/data/cyrus.csv',stringsAsFactors=F)
write.csv(Data2, 'rawdata.csv', quote=F)
length(Data2)
nrow(Data2)
ncol(Data2)
colnames(Data2)
head(Data2)
Data2[1,]
Data2[2,]
Data2[1:3,4]
Data2[1:5,1:3]
Data2[1:5, 1:3]
Mass <-(Data2[,9]=='trait_mass')
CyrusMilk <-Data2[Mass,]
head(CyrusMilk)
Mass <- which(Data2$event == 'trait_mass')
dayID <- apply(Data2, 1, function(x) paste(x[1:3], collapse='-'))
dateID <- sapply (dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")
Data2$age <- dateID - dateID[which(Data1$event == 'birth')]
head(Data2)
Cyrus2 <- Data2
cyrus3 <- cyrus2[order(cyrus2$age),]
Cyrus3 <- Cyrus2[order(cyrus2$age),]
Cyrus3 <- Cyrus2[order(Cyrus2$age),]
write.csv(Cyrus3, 'Cyrus_new.csv', quote=F, row.names=FALSE)
Mass<- which(Cyrus3$event == "trait_mass")
avgMilk <- mean(Cyrus3$value[Mass])
avgMass <- tapply(Cyrus3$value[Mass], Cyrus3$age[Mass], mean)
varMass <- tapply(Cyrus3$value[Mass], Cyrus3$age[Mass], var)
totalMass <- tapply(Cyrus3$value[Mass], Cyrus3$age[Feeds], sum)
totalMass <- tapply(Cyrus3$value[Mass], Cyrus3$age[Mass], sum)
totalMass <- tapply(Cyrus3$value[Mass], Cyrus3$age[Mass], sum)
numMass <- tapply(Cyrus3$value[Mass], Cyrus3$age[Mass], length)
cor(Cyrus3$value [Mass], Cyrus3$age [Mass])
cor.test(Cyrus3$value[Mass], Cyrus3$age[Mass])
cyrusCor <- cor.test(Cyrus3$value[Mass], Cyrus3$age[Mass])
summary(cyrusCor)
cyrusANOVA <- aov(Cyrus3$value[Mass]~ Cyrus3$caregiver[Mass])
boxplot( Cyrus3$value[Mass]~ Cyrus3$caregiver[Mass], xlab= "who gave the bottle" , ylab = "amount of milk consumed (oz)")
plot(as.numeric(names(totalMass)), totalMass , type ="b" , pch=16, xlab=" age in days" , ylab="ounces of milk")
abline(h=mean(totalMass), lty=2, col='red')
pdf('r02b-totalMilkByDay.pdf', height = 4, width = 4)
par(las=1, mar=c(5,5,1,1) , mgp=c(2, 0.5, 0), tck=-0.1)
pdf('r02b-totalMilkByDay.pdf', height = 4, width = 4)
par(las=1, mar=c(5,5,1,1) , mgp=c(2, 0.5, 0), tck=-0.1)
plot(as.numeric(names(totalMass)))
abline(h=mean(totalMass), lty=2, col='red')
dev.off()
boxplot(Cyrus3$value[Mass]~ Cyrus3$caregiver[Mass], xlab= "who gave the bottle" , ylab = "amount of milk consumed (oz)")
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalMass)), totalMass , type ="b" , pch=16, xlab=" age in days" , ylab="ounces of milk")
boxplot( beren3$value[Feeds]~ beren3$caregiver[Feeds], xlab= "who gave the bottle" , ylab = "amount of milk consumed (oz)")
source("http://jonsmitchell.com/code/plotFxn02b.R")
berenMass <-which(Data1$event=='trait_mass')
cyrusMass <-which(Data2$event=='trait-mass')
boxplot(beren3$age[berenMass]~ beren3$value[berenMass], xlabs= "age in days", ylabs="mass in kg")
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0),tck=-0.01)
plot(beren3$age[berenMass],berenMass, type="b", pch=16, xlabs="age in days", ylabs="mass in kg")
dayID <- apply(Data2,1, function(x) paste(x[1:3],collapse='-'))
warning()
dateID <- sapply(dayID, as.Date, format= "%Y-%m-%d", origin= "2019-04-18")
data2$age <- dataID -dateID[which(Data2$event == 'birth')]
Cyrus2 <- Data2
Cyrus3 <-Cyrus2[order(Cyrus2$age),]
CyrusMasskilo <-which(Cyrus3$event=='trait_mass')
CyrusMassKiloGrams <- CyrusMasskilo/1000
points(Cyrus3$age[cyrusMass], CyrusMassKiloGrams, pch=8, col="deeppurple")
Cyrus3
Cyrus3[Mass,]
cyrusMass
points(Cyrus3$age[Mass], Cyrus3$value[Mass])
plot(Cyrus3$age[Mass], Cyrus3$value[Mass])
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0),tck=-0.01)
plot(beren3$age[berenMass],berenMass, type="b", pch=16, xlabs="age in days", ylabs="mass in kg")
points(Cyrus3$age[Mass], Cyrus3$value[Mass], type='b')
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0),tck=-0.01)
plot(beren3$age[berenMass],berenMass, type="b", pch=16, xlabs="age in days", ylabs="mass in kg")
dayID <- apply(Data2,1, function(x) paste(x[1:3],collapse='-'))
dateID <- sapply(dayID, as.Date, format= "%Y-%m-%d", origin= "2019-04-18")
data2$age <- dataID -dateID[which(Data2$event == 'birth')]
points(Cyrus3$age[Mass], Cyrus3$value[Mass], type='b')
Cyrus3$value[Mass]
points(Cyrus3$value[Mass]/1000, Cyrus3age[Mass, pch=16, col='purple'])
points(Cyrus3age[Mass], Cyrus3$value[Mass], type='b')
points(Cyrus3$age)[Mass], Cyrus3$value[Mass]/1000,pch=16, col='yellow')
points(Cyrus3$age)[Mass] Cyrus3$value[Mass]/1000,pch=16, col='yellow')
points(Cyrus3age)[Mass] Cyrus3$value[Mass]/1000,pch=16, col='yellow')
title("Beren and Cyrus Age vs Mass")
legend(1000,6, legend = c("Beren", "Cyrus"), col = c("red", "yellow"), lty = 2:2, cex = 0.8, title = "childern", text.font = 4)
Mass <- which(Data1[,'event']=='trait_mass')
beren2 <- Data1
plot(beren3$age[berenMass],berenMass, type="b", pch=16, xlabs="age in days", ylabs="mass in kg", ylim=c(4,18))
plot(as. numeric(names(berenMass)),berenMass, type="b", pch=16, xlabs="age in days", ylabs="mass in kg", ylim=c(4,18))
plot(as.numeric(names(berenMass)),berenMass, type="b", pch=16, xlabs="age in days", ylabs="mass in kg", ylim=c(4,18))
Mass2<- which(Cyrus3$event == "trait_mass")
avgMassCyrus <- mean(Cyrus3$value[Mass2])
berenMass
beren3$value[berenMass]
berenMass <-which(beren3$event=='trait_mass')
cyrusMass <-which(Data2$event=='trait-mass')
boxplot(beren3$age[berenMass]~ beren3$value[berenMass], xlabs= "age in days", ylabs="mass in kg")
beren3$value[berenMass]
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(berenMass)),berenMass, type="b", pch=16, xlabs="age in days", ylabs="mass in kg", ylim=c(4,18))
CMass <- which(Data2$event == 'trait_mass')
CMass<- which(Cyrus3$event == "trait_mass")
avgMassCyrus <- mean(Cyrus3$value[CMass])
avgMass <- tapply(Cyrus3$value[CMass], Cyrus3$age[CMass], mean)
varMass <- tapply(Cyrus3$value[CMass], Cyrus3$age[CMass], var)
totalMass <- tapply(Cyrus3$value[CMass], Cyrus3$age[CMass], sum)
numMass <- tapply(Cyrus3$value[CMass], Cyrus3$age[CMass], length)
cor(Cyrus3$value [CMass], Cyrus3$age [CMass])
cor.test(Cyrus3$value[CMass], Cyrus3$age[CMass])
cyrusCor <- cor.test(Cyrus3$value[CMass], Cyrus3$age[CMass])
cyrusANOVA <- aov(Cyrus3$value[CMass]~ Cyrus3$caregiver[CMass])
boxplot(Cyrus3$value[CMass]~ Cyrus3$caregiver[CMass], xlab= "who gave the bottle" , ylab = "amount of milk consumed (oz)")
points(Cyrus$3age)[CMass] Cyrus3$value[CMass]/1000,pch=16, col='yellow')
setwd()
avgCMassCyrus <- mean(Cyrus3$value[CMass])
avgCMass <- tapply(Cyrus3$value[CMass], Cyrus3$age[CMass], mean)
CMass <-(Data2[,9]=='trait_mass')
CMass <-which(Data1[,9]== 'trait_mass')
berenMass <-Data1[Mass,]
head(berenMass)
Mass <-Data1[,'event']== 'trait_mass')
Mass <- which(Data1[,'event']== 'trait_mass')
Mass <- which(Data1$event== 'trait_mass')
dayID <-apply(Data1, 1, function(x) paste(x[1:3], collapse = '-'))
dayID <-sapply(dayID, as.Date, format="Y-%m%d", orgin= "2019-04-18")
plot(as.numeric(names(totalCMass)), totalCMass , type ="b" , pch=16, xlab=" age in days" , ylab="ounces of milk")
abline(h=mean(totalCMass), lty=2, col='red')
totalCMass <- tapply(Cyrus3$value[CMass], Cyrus3$age[CMass], sum)
totalCMass <- tapply(Cyrus3$value[Mass], Cyrus3$age[Mass], sum)
varCMass <- tapply(Cyrus3$value[CMass], Cyrus3$age[CMass], var)
numCMass <- tapply(Cyrus3$value[CMass], Cyrus3$age[CMass], length)
boxplot( beren3$value[Feeds]~ beren3$caregiver[Feeds], xlab= "age in days" , ylab = "mass in grams")
boxplot(Cyrus3$value[CMass]~ Cyrus3$caregiver[CMass], xlab= "age in days" , ylab = "mass in grams")
boxplot(Cyrus3$value[CMass]~ Cyrus3$age[CMass], xlab= "age in days" , ylab = "mass in grams")
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(berenMass)),berenMass, type="b", pch=16, xlabs="age in days", ylabs="mass in kg", ylim=c(4,18))
source("~/Desktop/Evolution/Tasks/Task.02/CSV.R")
berenMass
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0),tck=-0.01)
plot(berenMass$age, berenMass$value, type="b", pch=16, xlabs="age in days", ylabs="mass in kg", ylim=c(4,18))
#berenMass <-which(beren3$event=='trait_mass')
#berenMass <-which(beren3$event=='trait_mass')
#berenMass <-which(beren3$event=='trait_mass')
#berenMass <-which(beren3$event=='trait_mass')
#berenMass <-which(beren3$event=='trait_mass')
#berenMass <-which(beren3$event=='trait_mass')
source("~/Desktop/Evolution/Tasks/Task.02/task02.R")
dayID <- apply(Data2,1, function(x) paste(x[1:3],collapse='-'))
dateID <- sapply(dayID, as.Date, format= "%Y-%m-%d", origin= "2019-04-18")
data2$age <- dataID -dateID[which(Data2$event == 'birth')]
dayID <- apply(Data2,1, function(x) paste(x[1:3],collapse='-'))
dateID <- sapply(dayID, as.Date, format= "%Y-%m-%d", origin= "2019-04-18")
date2$age <- dateID -dateID[which(Data2$event == 'birth')]
dayID <- apply(Data2,1, function(x) paste(x[1:3],collapse='-'))
dateID <- sapply(dayID, as.Date, format= "%Y-%m-%d", origin= "2019-04-18")
Data2$age <- dateID -dateID[which(Data2$event == 'birth')]
Cyrus2 <- Data2
Cyrus3 <-Cyrus2[order(Cyrus2$age),]
Cyrus3
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0),tck=-0.01)
plot(berenMass$age, berenMass$value, type="b", pch=16, xlabs="age in days", ylabs="mass in kg", ylim=c(4,18))
points(Cyrus3$age, Cyrus3$value / 1000, pch=16, col="blue")
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0),tck=-0.01)
plot(berenMass$age, berenMass$value, type="b", pch=16, xlabs="age in days", ylabs="mass in kg", ylim=c(4,18))
points(Cyrus3$age, Cyrus3$value / 1000, pch=16, col="blue", type="b")
Cyrus3$value
source("~/Desktop/Evolution/Tasks/Task.02/task02.R")
pdf("r02b-totalMilkByDay.pdf", height= 4, width=4)
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0),tck=-0.01)
plot(berenMass$age, berenMass$value, type="b", pch=16, xlabs="age in days", ylabs="mass in kg", ylim=c(4,18))
points(Cyrus3$age, Cyrus3$value / 1000, pch=16, col="blue")
dev.off()
pdf("r02b-totalMilkByDay.pdf", height= 4, width=4)
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0),tck=-0.01)
plot(berenMass$age, berenMass$value, type="b", pch=16, xlabs="age in days", ylabs="mass in kg", ylim=c(4,18))
points(Cyrus3$age, Cyrus3$value / 1000, pch=16, col="blue")
abline(h=mean(totalFeed), lty=2, col='red')
dev.off()
source("~/Desktop/Evolution/Tasks/Task.02/task02.R")
